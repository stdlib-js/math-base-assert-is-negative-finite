{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport NINF from '@stdlib/constants-float64-ninf';\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is a negative finite number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a negative finite number\n*\n* @example\n* var bool = isNegativeFinite( -3.14 );\n* // returns true\n*\n* @example\n* var bool = isNegativeFinite( -Infinity );\n* // returns false\n*\n* @example\n* var bool = isNegativeFinite( 2.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeFinite( NaN );\n* // returns false\n*\n* @example\n* var bool = isNegativeFinite( -0.0 );\n* // returns false\n*/\nfunction isNegativeFinite( x ) {\n\treturn ( x < 0.0 && x > NINF );\n}\n\n\n// EXPORTS //\n\nexport default isNegativeFinite;\n"],"names":["isNegativeFinite","x","NINF"],"mappings":";;iGAqDA,SAASA,EAAkBC,GAC1B,OAASA,EAAI,GAAOA,EAAIC,CACzB"}